8.11-8.16
老师好。这是我8月11日至16日的总结：
1.完成的学习任务/工作任务
    (1)、对后端进行重构，主要包括公共资源包（有注解、配置、常量、自定义异常、mapper相关、拦截器、切面、权限校验等包和后端统一返回对象类）和业务控制层包（有不同用户相关控制层包）等。
    (2)、用户分为个人用户、测吧管理员、商户管理员三类，每类用户只能访问特定路径下的接口。通过jwt校验权限，通过添加Login等注解进行权限校验管理。
    (3)、其中自定义异常包中的类可以根据业务的异常信息设置不同异常码和提示信息，从而使前端进行相应判断与展示；拦截器包中的类可以实现全局捕获异常和登陆校验等；权限校验包中的类可从接口或token中获取登陆信息等；后端统一返回对象类包括返回状态码、返回码、信息、元数据和结果数据等。
    (4)、在数据库现有表中添加有备注、状态是否有效、是否删除、创建和更新时间等通用字段，从而实现逻辑删除等操作。
2.所学知识
    (1)、对gitlab中项目进行导入，创建gitlab-ci.yml来进行持续集成/交付，学习指令作用。对某个项目配置服务器Runners，最终成功在流水线中看到具体的提交内容。
    (2)、了解具有同样功能的测试平台saucelabs。
3.遇到的问题
    在centos服务器中安装nodejs和npm，可通过直接使用yum install epel-release或npm i -g npm或yum install -y nodejs10等方法进行安装，但遇到版本过旧或者node不会更新、命令不正确等问题，最后使用使用wget下载并移动目录和建立链接的方法完成。



7.28-8.2
老师好。这是我7月28日至8月2日的总结：
1.所处阶段
    测吧平台项目，目前完成AppCrawler平台基本功能。
2.所学知识
    (1)、学习并实现了后端的分页查询，包括所有已上传的App和特定用户上传App的分页查询。通过使用jsonObject.getInteger获取当前页数，指定显示数量后进行分页查询。待数据量较大时改成通过索引进行查询。
    (2)、将单独获取所有页数和数量的getPageAppListByUserId方法取消，改为在分页函数内调用SELECT COUNT(*)等方法进行获取并处理。并将数量和app列表通过put整合到同一个JSONObject内并返回。
    (3)、实现App的上传功能，使用@RequestParam获取所上传的文件和相关参数，获取服务器路径后通过transferTo方法保存文件。使用Postman和HTTP Client进行了测试。
    (4)、修改MsgResponse.success内的参数内容和成功后的提示语内容，避免与系统错误代码冲突修改几个错误代码。
3.遇到的问题
    (1)、Required request part 'file' is not present和Current request is not a multipart request，是由于使用HTTP Client测试时method、Request Body等没有正确填写导致。
    (2)、Access denied for user 'ODBC'@'localhost' (using password: NO) ：在控制台中登录MySql的方法不对。

